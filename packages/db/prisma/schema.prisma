// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TickStatus {
  SUCCESS
  FAILED
}

model Websites {
  id        String   @id @default(uuid())
  user      Users    @relation("UserWebsites", fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  name      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticks     Ticks[]

  @@map("websites")
}

model Users {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  websites  Websites[] @relation("UserWebsites")

  @@map("users")
}

model Ticks {
  id           String     @id @default(uuid())
  websiteId    String
  website      Websites   @relation(fields: [websiteId], references: [id])
  status       TickStatus
  responseTime Int
  responseCode Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("ticks")
}
